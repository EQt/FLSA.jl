#!/usr/bin/env julia
## -*- mode: julia; -*-

using Compat.String

desc = """
Compute the graph induced Fused LASSO Signal Approximator
"""

using ArgParse
s = ArgParseSettings(description=desc)
@add_arg_table s begin
    "--quiet", "-q"
        action = :store_true
        help = "suppress any output"
    "--max-iter", "-m"
        help = "maximum number of iterations"
        arg_type = Int
        default = 20
    "input"
        help = "problem instance (in hdf5)"
        arg_type = String
        required = true
end
args = parse_args(s)

using HDF5
using FLSA

y, mu, D = FLSA.read_h5(args["input"])
D = map(Float64, D)
y = map(Float64, y)
mu = map(Float64, mu)

x = admm(y, D, max_iter=args["max-iter"], verbose=!args["quiet"])

h5open(args["input"], "r+") do io
    if exists(io, "nodes/output")
        o_delete(io, "nodes/output")
    end
    write(io, "nodes/output", x)
end
